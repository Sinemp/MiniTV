// This is the full code for the itty-router library
var e=(t,o)=>t.find(t=>{let[r,s,i]=t;return(i||(r=new RegExp(r.source,"i")),r.test(o))})||[];export function Router(t={}){let o=[],r=new AbortController,s=new Proxy(t,{get:(t,r)=>(...s)=>i(r.toUpperCase(),...s)});async function i(r,...s){let[a,e,n]=s,l=e,c=n;3===s.length?(l=a,c=e):2===s.length&&"string"==typeof a&&(l=a);let f=new URL(l,t.base),h=f.pathname,p=o.find(t=>{let[o,i,n]=t;return n===r&&(i||(o=new RegExp(o.source,"i")),o.test(h))});if(p){let[t,o,r,s]=p,i=h.match(t)||[];f.params=i.groups||{},f.query=Object.fromEntries(f.searchParams.entries());try{return await s(f,c)}catch(t){if(t instanceof DOMException&&"AbortError"===t.name)return;throw t}}return}return s.all=((t,r)=>{o.push(["string"==typeof t?new RegExp(`^${(t||"").replace(/(\/?)\*/g,"($1.*)?").replace(/\/$/, "").replace(/:(\w+)(\?)?/g,"${2?\"\":\"\"}(?<$1>[^$2/]+)${2?\"?\":""}").replace(/\./g,"\\.")}/*$`):t,t,void 0,r])}),s.abort=r.abort.bind(r),s.handle=i,s}
